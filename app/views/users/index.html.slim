h1 Listing users

-if can? :create, User
  | Held Tickets: #{@tickets.select{|t| t.held}.count}
  br
  | Used Tickets: #{@tickets.select{|t| !t.held}.count}
  br
  | Total Tickets: #{@tickets.count}
  br
  	=form_tag({action: :import_csv}, multipart: true) do
      =file_field_tag 'csv'
      =submit_tag "Import"
  - if flash[:errors] && flash[:errors].any?
    = flash[:errors]

table.table.table-striped
  thead
    tr
      -if can? :create, User
        th= select_tag 'select[ticket_motion]', options_for_select(["", "Give", "Send"], params.dig(:select,:ticket_motion))
        th
          | Score
          = select_tag 'sort[score]', options_for_select(["", "desc", "asc"], params.dig(:sort,:score))
        th
          | Work Units
          = select_tag 'sort[work_units]', options_for_select(["", "desc", "asc"], params.dig(:sort,:work_units))
        th
          | Ticketing
          = select_tag 'select[ticketed]', options_for_select({"All" => nil, "Has tickets" => true, "Needs tickets" => false}, params.dig(:select,:ticketed))
        th
          | Tickets Held
          = select_tag 'sort[tickets_held]', options_for_select(["", "desc", "asc"], params.dig(:sort,:tickets_held))
      th
       | Status
       = select_tag 'filter[status]', options_for_select(["", "camper", "fellow"], params.dig('filter','status'))
      th
        | Name
        = select_tag 'search[name]', options_for_select(["", "desc", "asc"], params.dig(:search,:name))
      th
        | Location
        = select_tag 'filter[location]', options_for_select(User.pluck(:location).uniq, params.dig(:filter, :location))
      -if !mobile_request?
        th
          | Email
          = select_tag 'search[email]', options_for_select(["", "desc", "asc"], params.dig(:search,:email))
      th Phone
      th Userpic
      -if !mobile_request?
        th

  tbody
    - @users.each do |user|
      - if !mobile_request?
        tr
          - if can? :create, User
            th
              - if user.needed_tickets > user.tickets.count
                = link_to give_user_path(user)
                 button.btn.btn-primary.btn-sm Give
              - if user.tickets.count > user.needed_tickets
                = link_to send_user_path(user)
                  button.btn.btn-secondary.btn-sm Send
            //Score
            td = user.score
            td = "#{(user.work_unit||0)}%"

            //Ticketing
            td = user.tickets.count >= user.needed_tickets && user.status == "camper"

            //Tickets held
            td = [(user.tickets.count - user.needed_tickets),0].max
          td = user.status
          td = user.name
          td = user.location
          td = user.email
          td = user.phone
          td = image_tag user.userpic.thumb
          - if can? :manage, user
            td = link_to 'Edit', edit_user_path(user)
          - else
            td = link_to 'Show', user_path(user)
      - else
        tr(onclick="document.location = '/?user=#{user.id}'")
          td = user.name
          td = user.phone
          td = image_tag user.userpic.thumb

br

- if can? :create, User
  = link_to 'New User', new_user_path

coffee:
  # TODO: Not inline Coffeescript. But, for this tiny snippet... this is fine for now
  $('select').on 'change', (event) ->
    window.location.search= "?#{this.name}=#{this.value}"
  
